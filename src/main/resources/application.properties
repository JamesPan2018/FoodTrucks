spring.application.name=foodtrucks

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.platform=h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.scriptPath=/data/schema-h2.sql
#h2 console URL: http://localhost:8080/h2-console

# 初始化 SQL 脚本
spring.datasource.initialization-mode=always
spring.datasource.schema=data/schema-h2.sql

# 设置 MyBatis 的日志级别为 DEBUG
logging.level.org.mybatis=DEBUG

#spring.security.oauth2.client.registration.<your-client-id>.client-id=your-client-id
#spring.security.oauth2.client.registration.<your-client-id>.client-secret=your-client-secret
#spring.security.oauth2.client.registration.<your-client-id>.authorization-uri=authorization-uri
#spring.security.oauth2.client.registration.<your-client-id>.token-uri=token-uri
#spring.security.oauth2.client.registration.<your-client-id>.user-info-uri=user-info-uri
#spring.security.oauth2.client.registration.<your-client-id>.redirect-uri=redirect-uri
#spring.security.oauth2.client.registration.<your-client-id>.scope=scope



#spring.security.oauth2.client.registration.my-client-id.client-id=your-client-id
#spring.security.oauth2.client.registration.my-client-id.client-secret=your-client-secret
#spring.security.oauth2.client.registration.my-client-id.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.my-client-id.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.my-client-id.scope=read,write
#spring.security.oauth2.client.registration.my-client-id.client-name=Your Client Name
#spring.security.oauth2.client.provider.my-client-id.authorization-uri=https://your-authorization-server.com/oauth/authorize
#spring.security.oauth2.client.provider.my-client-id.token-uri=https://your-authorization-server.com/oauth/token
#spring.security.oauth2.client.provider.my-client-id.user-info-uri=https://your-authorization-server.com/oauth/userinfo
#spring.security.oauth2.client.provider.my-client-id.jwk-set-uri=https://your-authorization-server.com/oauth2/jwk
#spring.security.oauth2.client.provider.my-client-id.issuer-uri=https://your-authorization-server.com



#获取所有食品车辆：GET /foodtrucks/getAll
#分页获取所有食品车辆：GET /foodtrucks/getAll/paged
#根据 ID 获取食品车辆：GET /foodtrucks/{id}
#搜索食品车辆：GET /foodtrucks/search?keyword=xxx
#根据位置筛选食品车辆：GET /foodtrucks/filter/location?location=xxx
#根据类型筛选食品车辆：GET /foodtrucks/filter/type?type=xxx


#还需要做一个OAuth + JUnit + 创建一个AOP

#AOP 已经做好了， JUnit也做好了， OAuth还没做, 前端页面还需要做一个分页



